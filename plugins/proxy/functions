#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

AVAILABLE_PROXIES=(caddy traefik)

fn-get-proxy-labels-file-path() {
  declare desc="return proxy labels config file path for specified proxy"
  local APP="$1" PROXY="$2"
  local PROXY_FILE="${DOKKU_ROOT}/${APP}/PROXY_LABELS_${PROXY^^}"
  echo "$PROXY_FILE"
}

get_proxy_labels_file_path() {
  declare desc="return proxy labels config file path for specified proxy"
  local proxy_labels_file_prefix="PROXY_LABELS_"
  local proxy=$1
  [[ "$APP" && "$proxy" ]] || dokku_log_fail "Error: proxy_labels_file_path is incomplete."
  fn-get-proxy-labels-file-path "$APP" "$proxy"
}

get_phases() {
  declare desc="returns array of passed passes if all are in allowed array"
  local passed_phases_list="$1"
  # shellcheck disable=SC2001
  local -r phases_allowed=$(sed -e 's/ /\|/g' <<<"${AVAILABLE_PHASES[@]}")
  local phase
  local passed_phases
  if [[ -n "$passed_phases_list" ]]; then
    OIFS=$IFS
    IFS=','
    read -ra passed_phases <<<"$passed_phases_list"
    IFS=$OIFS
    for phase in "${passed_phases[@]}"; do
      [[ "$phase" == @($phases_allowed) ]] || dokku_log_fail "Phase(s) must be one of [${AVAILABLE_PHASES[*]}]"
    done
    echo "${passed_phases[@]}"
  fi
}

create_proxy_labels_file_if_required() {
  declare desc="create proxy labels file"
  local proxy_labels_file_path="$1"
  [[ -f "$proxy_labels_file_path" ]] || {
    touch "$proxy_labels_file_path"
  }
}

display_proxy_labels() {
  declare desc="print docker-options for specified phase"
  local proxy="$1"
  local proxy_file_path="$2"
  echo "${proxy^} labels:"
  sed -e 's/^/    /' "$proxy_file_path"
}

display_passed_phases_options() {
  declare desc="print docker options for list of specified phases"
  local passed_phases=("${!1}")
  local phase
  for phase in "${passed_phases[@]}"; do
    local phase_file_path="$(get_phase_file_path "$phase")"
    if [[ ! -s "$phase_file_path" ]]; then
      echo "${phase^} options: none"
    else
      display_phase_options "$phase" "$phase_file_path"
    fi
  done
}

add_passed_proxy_label() {
  declare desc="adds container label for specified proxy"
  local proxy="${1}"
  local passed_label_name="${2}"
  local passed_label_value="${3}"
  shift 3
  local proxy_labels_file_path="$(get_proxy_labels_file_path "$proxy")"
  create_proxy_labels_file_if_required "$proxy_labels_file_path"
  echo "--label ${passed_label_name}=${passed_label_value} " >>"$proxy_labels_file_path"
  echo -e "${all_proxy_labels_options}" | sed '/^$/d' | sort -u >"$proxy_labels_file_path"
}

remove_passed_proxy_label() {
  declare desc="removes container label for specified proxy"
  local proxy="${1}"
  local passed_label_name="${2}"
  shift 2

  local proxy_labels_file_path="$(get_proxy_labels_file_path "$proxy")"
  [[ ! -s "$proxy_labels_file_path" ]] || {
    local all_proxy_labels="$(<"$proxy_labels_file_path")"
    local all_proxy_labels=$(echo -e "${all_proxy_labels}" | sed "s#^--label ${passed_label_name}=.*\$##")
    echo -e "${all_proxy_labels}" | sed '/^$/d' | sort -u >"$proxy_labels_file_path"
  }
}
